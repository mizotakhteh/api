name: Main
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: clux/muslrust
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-musl
      - name: Upload The App
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: target/x86_64-unknown-linux-musl/release/mizotakhteh-api

  containerization:
    needs: [build]
    runs-on: ubuntu-latest
    services:
      tor:
        image: docker:dind
    container:
      image: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download The App
        uses: actions/download-artifact@v3
        with:
          name: app
          path: target/x86_64-unknown-linux-musl/release/
      - name: Login to GitHub Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Build
        run: docker build -t ghcr.io/${{ github.repository }} .
      - name: Docker Push
        run: docker push ghcr.io/${{ github.repository }}

  arvan-pass-deploy:
    runs-on: ubuntu-latest
    needs: [containerization]
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare Arvan CLI
        run: |
          wget https://github.com/arvancloud/cli/releases/download/v1.0.3/arvan_1.0.3_linux_amd64.tar.gz
          tar -xf arvan_1.0.3_linux_amd64.tar.gz
          chmod +x ./arvan
          ./arvan update
          echo ${{ secrets.ARVAN_PAAS_TOKEN }} | ./arvan login
      - name: Deploy On Arvan PaaS
        run: ./arvan paas apply -k kubernetes/overlays/arvan-paas